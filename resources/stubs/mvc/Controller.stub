<?php

namespace App\Http\Controllers\Admin;

use Illuminate\Http\Request;
use App\{{modelName}};
use Illuminate\Support\Facades\Redirect;
use App\Http\Controllers\Controller;
use Validator;

class {{modelName}}Controller extends Controller
{
    public function index()
    {
        ${{modelNamePluralLowerCase}} = {{modelName}}::latest()->get();
        return view("admin.{{modelNameSingularLowerCase}}.index", compact('{{modelNamePluralLowerCase}}'));
    }
    
    /**
     * Show the form for creating a new resource.
     *
     * @return Response
     */
    public function create() {
        ${{modelNameSingularLowerCase}} = {{modelName}}::all();
        return view('admin.{{modelNameSingularLowerCase}}.create', compact('{{modelNameSingularLowerCase}}'));
    }

    public function store(Request $request)
    {
        $rules = []; // add validation here
        $data = $request->all();
        $validator = Validator::make($data, $rules);
        if ($validator->fails()) {
            return redirect()->back()->withInput()->withErrors($validator);
        }
        ${{modelNameSingularLowerCase}} = {{modelName}}::create($request->all());
        return redirect()->route('{{modelNamePluralLowerCase}}.index');
    }

    public function show($id)
    {
        ${{modelNameSingularLowerCase}} = {{modelName}}::findOrFail($id);
        return view('admin.{{modelNameSingularLowerCase}}.index', compact('{{modelNameSingularLowerCase}}'));
    }
    
    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return Response
     */
    public function edit($id) {
        ${{modelNamePluralLowerCase}} = {{modelName}}::findOrFail($id);
        return view('admin.{{modelNameSingularLowerCase}}.edit', compact('{{modelNamePluralLowerCase}}'));
    }

    public function update(Request $request, $id)
    {
        ${{modelNameSingularLowerCase}} = {{modelName}}::findOrFail($id);
        $rules = []; // add validation here
        $data = $request->all();
        $validator = Validator::make($data, $rules);
        if ($validator->fails()) {
            return redirect()->back()->withInput()->withErrors($validator);
        }
        ${{modelNameSingularLowerCase}}->update($request->all());
        return redirect()->route('{{modelNamePluralLowerCase}}.index');
    }

    public function destroy($id)
    {
        {{modelName}}::destroy($id);
        \Session::flash('message', 'You have successfully deleted {{modelName}}');
        return Redirect::route('{{modelNamePluralLowerCase}}.index');
    }
}
